import { Injectable } from "@snap/ts-inject";
import { Subject } from "rxjs";
import { lensCoreFactory } from "../lens-core-module/loader/lensCoreFactory";
import { getLogger } from "../logger/logger";
const logger = getLogger("FrameEvents");
export const frameEventsFactory = Injectable("frameEvents", [lensCoreFactory.token], (lensCore) => {
    const frameEventsSubject = new Subject();
    lensCore
        .setOnFrameProcessedCallback({
        onFrameProcessed: (frameEvent) => {
            frameEventsSubject.next(frameEvent);
        },
    })
        .catch((error) => logger.error(`Failed registering setOnFrameProcessedCallback with error: ${error.message}`));
    return frameEventsSubject.asObservable();
});
//# sourceMappingURL=frameEvents.js.map